// <auto-generated />
using DSEDFinalProjectTripPlanner.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DSEDFinalProjectTripPlanner.Migrations
{
    [DbContext(typeof(TripContext))]
    [Migration("20180514024108_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("DSEDFinalProjectTripPlanner.Models.ActivityTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressCity")
                        .IsRequired();

                    b.Property<string>("AddressCountry")
                        .IsRequired();

                    b.Property<string>("AddressLine1")
                        .IsRequired();

                    b.Property<string>("AddressLine2");

                    b.Property<string>("AddressPostcode");

                    b.Property<string>("AddressRegion")
                        .IsRequired();

                    b.Property<string>("ConfirmationNumber");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("LocationName");

                    b.Property<int>("NumOfPeopleAttending");

                    b.Property<DateTime>("StartDate");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("SupplierName");

                    b.Property<string>("TypeOfActivity")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ActivityTasks");
                });

            modelBuilder.Entity("DSEDFinalProjectTripPlanner.Models.CarRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressCity")
                        .IsRequired();

                    b.Property<string>("AddressCountry")
                        .IsRequired();

                    b.Property<string>("AddressLine1")
                        .IsRequired();

                    b.Property<string>("AddressLine2");

                    b.Property<string>("AddressPostcode");

                    b.Property<string>("AddressRegion")
                        .IsRequired();

                    b.Property<string>("ConfirmationNumber");

                    b.Property<string>("ContactPhoneNumber");

                    b.Property<DateTime>("DropoffDate");

                    b.Property<DateTime>("DropoffTime");

                    b.Property<DateTime>("PickupDate");

                    b.Property<string>("PickupName")
                        .IsRequired();

                    b.Property<DateTime>("PickupTime");

                    b.Property<string>("SuppplierName");

                    b.HasKey("Id");

                    b.ToTable("CarRentals");
                });

            modelBuilder.Entity("DSEDFinalProjectTripPlanner.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Airline")
                        .IsRequired();

                    b.Property<DateTime>("ArrivalDate");

                    b.Property<string>("ArrivalGate");

                    b.Property<string>("ArrivalTerminal");

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<string>("ArrivalTo")
                        .IsRequired();

                    b.Property<string>("ConfirmationNumber");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<string>("DepartureFrom")
                        .IsRequired();

                    b.Property<string>("DepartureGate");

                    b.Property<string>("DepartureTerminal");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("FlightNumber")
                        .IsRequired();

                    b.Property<string>("Seats");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("DSEDFinalProjectTripPlanner.Models.Lodging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressCity")
                        .IsRequired();

                    b.Property<string>("AddressCountry")
                        .IsRequired();

                    b.Property<string>("AddressLine1")
                        .IsRequired();

                    b.Property<string>("AddressLine2");

                    b.Property<string>("AddressPostcode");

                    b.Property<string>("AddressRegion")
                        .IsRequired();

                    b.Property<DateTime>("ArrivalDate");

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<string>("ConfirmationNumber");

                    b.Property<DateTime>("DepartureDate");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("LodgingName");

                    b.Property<int>("NumOfGuests");

                    b.Property<int>("NumOfRooms");

                    b.Property<string>("RoomDescription");

                    b.HasKey("Id");

                    b.ToTable("Lodgings");
                });

            modelBuilder.Entity("DSEDFinalProjectTripPlanner.Models.OtherTransportation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArrivalAddressCity")
                        .IsRequired();

                    b.Property<string>("ArrivalAddressCountry")
                        .IsRequired();

                    b.Property<string>("ArrivalAddressLine1")
                        .IsRequired();

                    b.Property<string>("ArrivalAddressLine2");

                    b.Property<string>("ArrivalAddressPostcode");

                    b.Property<string>("ArrivalAddressRegion")
                        .IsRequired();

                    b.Property<DateTime>("ArrivalDate");

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<string>("CarrierName");

                    b.Property<string>("DepartureAddressCity")
                        .IsRequired();

                    b.Property<string>("DepartureAddressCountry")
                        .IsRequired();

                    b.Property<string>("DepartureAddressLine1")
                        .IsRequired();

                    b.Property<string>("DepartureAddressLine2");

                    b.Property<string>("DepartureAddressPostcode");

                    b.Property<string>("DepartureAddressRegion")
                        .IsRequired();

                    b.Property<DateTime>("DepartureDate");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("TypeOfTransport");

                    b.HasKey("Id");

                    b.ToTable("OtherTransportations");
                });

            modelBuilder.Entity("DSEDFinalProjectTripPlanner.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressCity")
                        .IsRequired();

                    b.Property<string>("AddressCountry")
                        .IsRequired();

                    b.Property<string>("AddressLine1")
                        .IsRequired();

                    b.Property<string>("AddressLine2");

                    b.Property<string>("AddressPostcode");

                    b.Property<string>("AddressRegion")
                        .IsRequired();

                    b.Property<string>("ConfirmationNumber");

                    b.Property<string>("Cuisine");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("DressCode");

                    b.Property<string>("HoursOfOperation");

                    b.Property<int>("NumberInParty");

                    b.Property<string>("PriceRange");

                    b.Property<string>("RestaurantName");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("DSEDFinalProjectTripPlanner.Models.Traveller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("FrequentFlyerNumber");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Travellers");
                });

            modelBuilder.Entity("DSEDFinalProjectTripPlanner.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DestinationCity");

                    b.Property<string>("DestinationCountry");

                    b.Property<DateTime>("FinishDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });
#pragma warning restore 612, 618
        }
    }
}
